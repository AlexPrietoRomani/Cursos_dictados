matriz_cl <- xtabs(~ Row + Col, data = diseño_cl$book, subset = TRT)
matriz_cl <- xtabs(~ row + col, data = diseño_cl$book, subset = TRT)
# Visualizar el diseño en forma de matriz
matriz_cl <- xtabs(~ row + col, data = diseño_cl$book, subset = trt)
# Visualizar el diseño en forma de matriz
matriz_cl <- xtabs(~ row + col, data = diseño_cl$book, subset = tratamientos)
print("Matriz del Diseño de Cuadrado Latino:")
print(matriz_cl)
# Simular datos de rendimiento
set.seed(456)
datos_cl <- diseño_cl$book %>%
mutate(
Rendimiento = rnorm(n(), mean = 50 + ifelse(tratamientos == "A", 5,
ifelse(tratamientos == "B", 0,
ifelse(tratamientos == "C", -5, 10))),
sd = 2)
)
# Mostrar los datos simulados
print("Datos Simulados para el Diseño de Cuadrado Latino:")
print(datos_cl)
# Convertir variables a factores
datos_cl$Row <- as.factor(datos_cl$Row)
# Ajustar el modelo ANOVA
modelo_cl <- aov(Rendimiento ~ tratamientos + row + col, data = datos_cl)
summary(modelo_cl)
comparaciones_cl <- HSD.test(modelo_cl, "tratamientos", group = TRUE)
print("Comparaciones Múltiples entre Tratamientos (Cuadrado Latino):")
print(comparaciones_cl$groups)
ggplot(datos_cl, aes(x = tratamientos, y = Rendimiento)) +
geom_boxplot(fill = "lightblue") +
labs(title = "Rendimiento por Variedad (Cuadrado Latino)",
x = "Variedad",
y = "Rendimiento")
tratamientos_fc <- paste("Fert", 1:6, sep = "_")
# Generar el diseño de Filas y Columnas utilizando el paquete agricolae
diseño_fc <- design.graeco(trt1 = tratamientos_fc[1:3], trt2 = tratamientos_fc[4:6], seed = 123, serie = 2)
# Nota: En este ejemplo, utilizamos un diseño Grecolatino para acomodar más tratamientos.
# Mostrar el diseño
print("Diseño de Filas y Columnas:")
print(diseño_fc$book)
# Simular datos de rendimiento
set.seed(789)
datos_fc <- diseño_fc$book %>%
mutate(
Rendimiento = rnorm(n(), mean = 60 + as.numeric(as.factor(trt1))*2 - as.numeric(as.factor(trt2))*1.5, sd = 3)
)
trt1 <- tratamientos_fc[1:3]
trt2 <- tratamientos_fc[4:6]
# Definir los tratamientos
tratamientos_fc <- paste("Fert", 1:6, sep = "_")
trt1 <- tratamientos_fc[1:3]
trt2 <- tratamientos_fc[4:6]
# Generar el diseño de Filas y Columnas utilizando el paquete agricolae
diseño_fc <- design.graeco(trt1 = trt1, trt2 = trt2, seed = 123, serie = 2)
# Mostrar el diseño
print("Diseño de Filas y Columnas:")
print(diseño_fc$book)
# Simular datos de rendimiento
set.seed(789)
datos_fc <- diseño_fc$book %>%
mutate(
Rendimiento = rnorm(n(), mean = 60 + as.numeric(as.factor(trt1))*2 - as.numeric(as.factor(trt2))*1.5, sd = 3)
)
# Mostrar los datos simulados
print("Datos Simulados para el Diseño de Filas y Columnas:")
print(datos_fc)
# Convertir variables a factores
datos_fc$Row <- as.factor(datos_fc$Row)
# Simular datos de rendimiento
set.seed(789)
datos_fc <- diseño_fc$book %>%
mutate(
Rendimiento = rnorm(n(), mean = 60 + as.numeric(as.factor(trt1))*2 - as.numeric(as.factor(trt2))*1.5, sd = 3)
)
# Mostrar los datos simulados
print("Datos Simulados para el Diseño de Filas y Columnas:")
print(datos_fc)
# Convertir variables a factores
datos_fc$Row <- as.factor(datos_fc$row)
datos_fc$Col <- as.factor(datos_fc$col)
datos_fc$trt1 <- as.factor(datos_fc$trt1)
datos_fc$trt2 <- as.factor(datos_fc$trt2)
# Ajustar el modelo ANOVA
modelo_fc <- aov(Rendimiento ~ trt1 + trt2 + row + col, data = datos_fc)
summary(modelo_fc)
# Comparaciones múltiples
comparaciones_fc_trt1 <- HSD.test(modelo_fc, "trt1", group = TRUE)
print("Comparaciones Múltiples entre Tratamientos trt1 (Filas y Columnas):")
print(comparaciones_fc_trt1$groups)
# Ajustar el modelo ANOVA
modelo_fc <- aov(Rendimiento ~ trt1 + trt2 + row + col, data = datos_fc)
summary(modelo_fc)
comparaciones_fc_trt1 <- HSD.test(modelo_fc, "trt1", group = TRUE)
print(datos_fc)
modelo_fc <- aov(Rendimiento ~ trt1 + trt2 + row + col, data = datos_fc)
summary(modelo_fc)
comparaciones_fc_trt1 <- HSD.test(modelo_fc, "trt1", group = TRUE)
library(agricolae)
controles <- c("Control1", "Control2", "Control3")
c(1:20)
# Definir tratamientos
controles <- c("Control1", "Control2", "Control3")
tratamientos_nuevos <- paste("T", 1:20, sep="")
# Generar el diseño de Bloques Aumentados
diseño_ba <- design.dau(
trt1 = controles,
trt2 = tratamientos_nuevos,
r = 4,  # Número de bloques
serie = 2,
seed = 123
)
controles <- c("Control1", "Control2", "Control3")
tratamientos_nuevos <- paste("T", 1:20, sep="")
# Generar el diseño de Bloques Aumentados
diseño_ba <- design.dau(
trt1 = controles,
trt2 = tratamientos_nuevos,
r = 4,  # Número de bloques
serie = 2,
seed = 123
)
View(diseño_ba)
View(diseño_ba)
print(diseño_ba$book)
set.seed(123)
datos_ba <- diseño_ba$book
datos_ba$yield <- c(
rnorm(length(controles) * 4, mean = 50, sd = 2),  # Controles replicados
rnorm(length(tratamientos_nuevos), mean = 55, sd = 3)  # Tratamientos nuevos
)
print(datos_ba)
modelo_ba <- aov(yield ~ trt + block, data = datos_ba)
summary(modelo_ba)
histogram(datos_ba$yield)
boxplot(datos_ba$yield)
library(ggplot2)
str(datos_ba)
ggplot(aes(x=trt, y= yield), datos_ba) +
geom_boxplot()
rm(list = ls())
library(ggplot2)   # Visualización de datos
library(dplyr)     # Manipulación de datos
library(readr)     # Lectura de datos
library(tidyr)
set.seed(123)
datos <- expand.grid(
Fertilizante = c("A", "B", "C"),
Variedad = c("V1", "V2", "V3"),
Repetición = 1:10
)
datos <- datos %>%
mutate(
Rendimiento = rnorm(
n(),
mean = ifelse(Fertilizante == "A", 50,
ifelse(Fertilizante == "B", 55, 60)) +
ifelse(Variedad == "V1", 5,
ifelse(Variedad == "V2", 0, -5)),
sd = 5
)
)
head(datos)
ggplot(data = datos, aes(x = Fertilizante, y = Rendimiento)) +
geom_point()
ggplot(data = datos, aes(x = Fertilizante, y = Rendimiento)) +
geom_bar()
head(datos)
ggplot(data = datos, aes(x = Variedad, y = Rendimiento)) +
geom_bar()
datos <- data.frame(
Variedad = c("A","B","C","D"),
Rendimiento = c(50,60,55,40)
)
ggplot(data = datos, aes(x = Variedad, y = Rendimiento)) +
geom_bar()
ggplot(datos, aes(x = Variedad, y = Rendimiento)) +
geom_bar(stat = "identity")
set.seed(123)
datos <- expand.grid(
Fertilizante = c("A", "B", "C"),
Variedad = c("V1", "V2", "V3"),
Repetición = 1:10
)
datos <- datos %>%
mutate(
Rendimiento = rnorm(
n(),
mean = ifelse(Fertilizante == "A", 50,
ifelse(Fertilizante == "B", 55, 60)) +
ifelse(Variedad == "V1", 5,
ifelse(Variedad == "V2", 0, -5)),
sd = 5
)
)
# Mostrar los primeros registros
head(datos)
# Calcular medias
medias_fertilizante <- datos %>%
group_by(Fertilizante) %>%
summarise(Media_Rendimiento = mean(Rendimiento))
ggplot(data = medias_fertilizante, aes(x = Fertilizante, y = Media_Rendimiento)) +
geom_bar(stat = "identity", fill = "skyblue")
ggplot(data = medias_fertilizante, aes(x = Fertilizante, y = Media_Rendimiento)) +
geom_bar(stat = "identity", fill = "red")
ggplot(data = medias_fertilizante, aes(x = Fertilizante, y = Media_Rendimiento)) +
geom_bar(stat = "identity", fill = "orange")
ggplot(data = medias_fertilizante, aes(x = Fertilizante, y = Media_Rendimiento)) +
geom_bar(stat = "identity", fill = "#AA0F43")
# Gráfico de barras
ggplot(data = medias_fertilizante, aes(x = Fertilizante, y = Media_Rendimiento)) +
geom_bar(stat = "identity", fill = "#AA0F43") +
labs(title = "Rendimiento Promedio por Fertilizante",
x = "Fertilizante",
y = "Rendimiento Promedio")
# Calcular medias
medias_fertilizante <- datos %>%
group_by(Fertilizante) %>%
summarise(Media_Rendimiento = mean(Rendimiento))
ggplot(data = datos, aes(x = Variedad, y = Rendimiento)) +
geom_boxplot(fill = "lightgreen") +
labs(title = "Distribución del Rendimiento por Variedad",
x = "Variedad",
y = "Rendimiento")
ggplot(data = datos, aes(x = Fertilizante, y = Rendimiento, color = Variedad)) +
geom_point(size = 3) +
labs(title = "Rendimiento por Fertilizante y Variedad",
x = "Fertilizante",
y = "Rendimiento")
ggplot(data = datos, aes(x = Fertilizante, y = Rendimiento)) +
geom_boxplot(fill = "orange") +
facet_wrap(~ Variedad) +
labs(title = "Rendimiento por Fertilizante y Variedad",
x = "Fertilizante",
y = "Rendimiento")
ggplot(data = datos, aes(x = Fertilizante, y = Rendimiento, group = Variedad, color = Variedad)) +
stat_summary(fun = mean, geom = "line", size = 1) +
stat_summary(fun = mean, geom = "point", size = 3) +
labs(title = "Interacción entre Fertilizante y Variedad",
x = "Fertilizante",
y = "Rendimiento Promedio")
ggplot(data = datos, aes(x = Fertilizante, y = Rendimiento, group = Variedad, color = Variedad)) +
stat_summary(fun = mean, geom = "line", size = 1)
ggplot(data = datos, aes(x = Fertilizante, y = Rendimiento, group = Variedad, color = Variedad)) +
#stat_summary(fun = mean, geom = "line", size = 1) +
stat_summary(fun = mean, geom = "point", size = 3) +
labs(title = "Interacción entre Fertilizante y Variedad",
x = "Fertilizante",
y = "Rendimiento Promedio")
ggplot(data = datos, aes(x = Fertilizante, y = Rendimiento, group = Variedad, color = Variedad)) +
stat_summary(fun = mean, geom = "line", size = 1) +
stat_summary(fun = mean, geom = "point", size = 3) +
labs(title = "Interacción entre Fertilizante y Variedad",
x = "Fertilizante",
y = "Rendimiento Promedio")
ggplot(data = datos, aes(x = Rendimiento, fill = Variedad)) +
geom_density(alpha = 0.5) +
labs(title = "Distribución del Rendimiento por Variedad",
x = "Rendimiento",
y = "Densidad")
datos_parcelas <- expand.grid(
Fila = 1:10,
Columna = 1:10
)
datos_parcelas <- datos_parcelas %>%
mutate(
Rendimiento = rnorm(n(), mean = 50, sd = 5)
)
ggplot(data = datos_parcelas, aes(x = Columna, y = Fila, fill = Rendimiento)) +
geom_tile() +
scale_fill_gradient(low = "yellow", high = "red") +
labs(title = "Mapa de Calor del Rendimiento en el Campo",
x = "Columna",
y = "Fila")
ggplot(data = datos, aes(x = Fertilizante, y = Rendimiento, color = Variedad)) +
geom_point(size = 3) +
theme_minimal() +
labs(title = "Rendimiento por Fertilizante y Variedad (Tema Minimal)",
x = "Fertilizante",
y = "Rendimiento")
ggplot(data = datos_parcelas, aes(x = Columna, y = Fila, fill = Rendimiento)) +
geom_tile() +
scale_fill_gradient(low = "yellow", high = "red") +
theme_minimal() +
labs(title = "Mapa de Calor del Rendimiento en el Campo",
x = "Columna",
y = "Fila")
ggplot(data = datos_parcelas, aes(x = Columna, y = Fila, fill = Rendimiento)) +
geom_tile() +
scale_fill_gradient(low = "yellow", high = "red") +
theme_dark() +
labs(title = "Mapa de Calor del Rendimiento en el Campo",
x = "Columna",
y = "Fila")
ggplot(data = datos_parcelas, aes(x = Columna, y = Fila, fill = Rendimiento)) +
geom_tile() +
scale_fill_gradient(low = "yellow", high = "red") +
theme_set() +
labs(title = "Mapa de Calor del Rendimiento en el Campo",
x = "Columna",
y = "Fila")
ggplot(data = datos_parcelas, aes(x = Columna, y = Fila, fill = Rendimiento)) +
geom_tile() +
scale_fill_gradient(low = "yellow", high = "red") +
theme_clean() +
labs(title = "Mapa de Calor del Rendimiento en el Campo",
x = "Columna",
y = "Fila")
ggplot(data = datos_parcelas, aes(x = Columna, y = Fila, fill = Rendimiento)) +
geom_tile() +
scale_fill_gradient(low = "yellow", high = "red") +
theme_solid() +
labs(title = "Mapa de Calor del Rendimiento en el Campo",
x = "Columna",
y = "Fila")
ggplot(data = datos, aes(x = Fertilizante, y = Rendimiento, shape = Variedad, color = Variedad)) +
geom_point(size = 3) +
labs(
title = "Rendimiento por Fertilizante y Variedad",
x = "Tipo de Fertilizante",
y = "Rendimiento (kg/ha)",
color = "Variedad de Cultivo",
shape = "Variedad de Cultivo"
)
ggplot(data = datos, aes(x = Fertilizante, y = Rendimiento, shape = Variedad, color = Variedad)) +
geom_point(size = 3) +
labs(
title = "Rendimiento por Fertilizante y Variedad",
x = "Tipo de Fertilizante",
y = "Rendimiento (kg/ha)",
color = "Variedad de Cultivo",
shape = "Variedad de Cultivo"
) +
theme(legend.position = "bottom")
library(ggthemes)
ggplot(data = datos, aes(x = Fertilizante, y = Rendimiento, shape = Variedad, color = Variedad)) +
geom_point(size = 3) +
labs(
title = "Rendimiento por Fertilizante y Variedad",
x = "Tipo de Fertilizante",
y = "Rendimiento (kg/ha)",
color = "Variedad de Cultivo",
shape = "Variedad de Cultivo"
) +
theme_economist() +
scale_color_economist() +
theme(
legend.position = "bottom",
plot.title = element_text(hjust = 0.5)
)
ggplot(data = datos, aes(x = Fertilizante, y = Rendimiento, shape = Variedad, color = Variedad)) +
geom_point(size = 3) +
labs(
title = "Rendimiento por Fertilizante y Variedad",
subtitle = "Datos Simulados",
x = "Tipo de Fertilizante",
y = "Rendimiento (kg/ha)",
color = "Variedad de Cultivo",
shape = "Variedad de Cultivo",
caption = "Fuente: Simulación de Datos"
) +
theme(
# Título del gráfico
plot.title = element_text(
family = "Arial",        # Tipo de letra
face = "bold.italic",           # Estilo (bold, italic, bold.italic)
size = 16,               # Tamaño del texto
hjust = 0.5              # Alineación horizontal (0 izquierda, 0.5 centro, 1 derecha)
),
# Subtítulo
plot.subtitle = element_text(
family = "Arial",
face = "italic",
size = 12,
hjust = 0.5
),
# Etiquetas de los ejes
axis.title.x = element_text(
family = "Times New Roman",
face = "bold.italic",
size = 12,
color = "blue"
),
axis.title.y = element_text(
family = "Times New Roman",
face = "bold.italic",
size = 12,
color = "blue"
),
# Texto de los ejes (ticks)
axis.text.x = element_text(
family = "Calibri",
face = "bold",
size = 10,
angle = 0,
hjust = 0.5,
vjust = 0.5
),
axis.text.y = element_text(
family = "Calibri",
face = "bold",
size = 10
),
# Título de la leyenda
legend.title = element_text(
family = "Arial",
face = "bold",
size = 12
),
# Texto de la leyenda
legend.text = element_text(
family = "Arial",
size = 10
),
# Posición de la leyenda
legend.position = "bottom",  # También puede ser "top", "left", "right", "none"
legend.box = "horizontal",
# Fondo del gráfico
panel.background = element_rect(fill = "white"),  # Fondo blanco
panel.grid.major = element_line(color = "gray90"),  # Líneas de cuadrícula principales
panel.grid.minor = element_blank(),  # Eliminar líneas de cuadrícula menores
# Fondo general del gráfico
plot.background = element_rect(fill = "white", color = NA),
# Margen del gráfico
plot.margin = margin(t = 10, r = 10, b = 10, l = 10)
)
datos_resumen <- datos %>%
group_by(Fertilizante, Variedad) %>%
summarise(Rendimiento_Total = sum(Rendimiento))
ggplot(data = datos_resumen, aes(x = Fertilizante, y = Rendimiento_Total, fill = Variedad)) +
geom_bar(stat = "identity") +
labs(title = "Rendimiento Total por Fertilizante y Variedad",
x = "Fertilizante",
y = "Rendimiento Total",
fill = "Variedad") +
theme_classic()
ggplot(data = datos_resumen, aes(x = Fertilizante, y = Rendimiento_Total, fill = Variedad)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Rendimiento Total por Fertilizante y Variedad",
x = "Fertilizante",
y = "Rendimiento Total",
fill = "Variedad") +
theme_classic()
datos_resumen_porcentaje <- datos_resumen %>%
group_by(Fertilizante) %>%
mutate(Porcentaje = Rendimiento_Total / sum(Rendimiento_Total) * 100)
ggplot(data = datos_resumen_porcentaje, aes(x = Fertilizante, y = Porcentaje, fill = Variedad)) +
geom_bar(stat = "identity") +
labs(title = "Porcentaje de Rendimiento por Fertilizante y Variedad",
x = "Fertilizante",
y = "Porcentaje de Rendimiento",
fill = "Variedad") +
theme_minimal()
ggplot(data = datos_resumen, aes(x = Fertilizante, y = Rendimiento_Total, fill = Variedad)) +
geom_bar(stat = "identity") +
geom_text(aes(label = round(Rendimiento_Total, 1)),
position = position_stack(vjust = 0.5),
color = "white", size = 3) +
labs(title = "Rendimiento Total por Fertilizante y Variedad (Con Etiquetas)",
x = "Fertilizante",
y = "Rendimiento Total",
fill = "Variedad") +
theme_classic()
# Gráfico de Barras Apiladas con Etiquetas
ggplot(data = datos_resumen, aes(x = Fertilizante, y = Rendimiento_Total, fill = Variedad)) +
geom_bar(stat = "identity") +
geom_text(aes(label = round(Rendimiento_Total, 1)),
position = position_stack(vjust = 0.5),
color = "white", size = 3) +
labs(title = "Rendimiento Total por Fertilizante y Variedad (Con Etiquetas)",
x = "Fertilizante",
y = "Rendimiento Total",
fill = "Variedad") +
theme_classic()
ggplot(data = datos_resumen, aes(x = Fertilizante, y = Rendimiento_Total, fill = Variedad)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = round(Rendimiento_Total, 1)),
position = position_dodge(0.9), vjust = -0.5, size = 3) +
labs(title = "Rendimiento Total por Fertilizante y Variedad (Etiquetas Arriba)",
x = "Fertilizante",
y = "Rendimiento Total",
fill = "Variedad") +
theme_minimal()
ggplot(data = datos_resumen, aes(x = Fertilizante, y = Rendimiento_Total, fill = Variedad)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(title = "Rendimiento Total por Fertilizante y Variedad (Barras Horizontales)",
x = "Rendimiento Total",
y = "Fertilizante",
fill = "Variedad") +
theme_bw()
datos_error <- datos %>%
group_by(Fertilizante, Variedad) %>%
summarise(
Rendimiento_Promedio = mean(Rendimiento),
Error_Estandar = sd(Rendimiento) / sqrt(n())
)
ggplot(data = datos_error, aes(x = Fertilizante, y = Rendimiento_Promedio, fill = Variedad)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = Rendimiento_Promedio - Error_Estandar, ymax = Rendimiento_Promedio + Error_Estandar),
width = 0.2, position = position_dodge(0.9)) +
labs(title = "Rendimiento Promedio por Fertilizante y Variedad (Con Barras de Error)",
x = "Fertilizante",
y = "Rendimiento Promedio",
fill = "Variedad") +
theme_minimal()
ggplot(data = datos_resumen, aes(x = Fertilizante, y = Rendimiento_Total, fill = Fertilizante)) +
geom_bar(stat = "identity") +
facet_wrap(~ Variedad) +
labs(title = "Rendimiento Total por Fertilizante y Variedad (Facetas por Variedad)",
x = "Fertilizante",
y = "Rendimiento Total") +
theme_light()
